<IfModule rewrite_module>
	RewriteEngine	On
	RewriteBase		/log4cxx

	RewriteCond %{HTTPS}	!=on
	RewriteRule ^(.*)$		https://%{SERVER_NAME}/log4cxx/$1	[R=permanent,L]

	##
	# Forward very old links to new at least somewhat compatible pages.
	#
	RewriteRule ^contributing\.html$		latest_stable/issue-tracking.html	[R=permanent,L]
	RewriteRule ^roadmap\.html$				latest_stable/issue-tracking.html	[R=permanent,L]
	RewriteRule ^support\.html$				latest_stable/mail-lists.html		[R=permanent,L]
	RewriteRule ^team\.html$				latest_stable/mail-lists.html		[R=permanent,L]
	RewriteRule ^performance\.html$			latest_stable/usage.html			[R=permanent,L]
	RewriteRule ^ChangeLog$					latest_stable/changes-report.html	[R=permanent,L]
	RewriteRule ^news$						latest_stable/changes-report.html	[R=permanent,L]
	RewriteRule ^manual\.html$				latest_stable/usage.html			[R=permanent,L]
	RewriteRule ^manual/index\.html$		latest_stable/usage.html			[R=permanent,L]
	RewriteRule ^manual/(.*)$				latest_stable/apidocs/$1			[R=permanent,L]
	RewriteRule ^manual\.html/index\.html$	latest_stable/usage.html			[R=permanent,L]
	RewriteRule ^manual\.html/(.*)$			latest_stable/apidocs/$1			[R=permanent,L]

	##
	# Forward old requests to new dir layout.
	#
	# This dir contained the site of the one released version only in the past, but we wanted to
	# provide that one of the next version to release as well, to make it easier for others to test
	# that version. The following is used to redirect old requests and it was decided to truly
	# redirect and not be fully transparent (anymore), because this way users may recognize the dir
	# structure and ask for other available sites.
	#
	RewriteCond %{REQUEST_URI} !^/log4cxx/latest_stable(?:/(?:.+)?)?$
	RewriteCond %{REQUEST_URI} !^/log4cxx/next_stable(?:/(?:.+)?)?$
	RewriteCond %{REQUEST_URI} !^/log4cxx/old_stable(?:/(?:.+)?)?$
	RewriteRule ^(.*)$			 /log4cxx/latest_stable/$1	[R=temp,L]
</IfModule>
